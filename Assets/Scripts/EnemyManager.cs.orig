using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class EnemyManager : MonoBehaviour 
{
	// ------------ Public, editable in the GUI, serialized
	public GameObject 								EnemyPrefab;
	public int										NumEnemies = 1;
		
	// ------------ Public, serialized
	
	// ------------ Public, non-serialized
	//[System.NonSerialized] List<MeshFilter> 		mEnemyMeshes = new List<MeshFilter>();
	[System.NonSerialized] List<Enemy> 				mEnemies = new List<Enemy>();
	[System.NonSerialized] int 						m_CurrentWaveId = 0;
	
	void Start () 
	{

//		GameObject folder = new GameObject ("ENEMIES");
//		EnemyPrefab.SetActive(true);
//	
//		for (int i=0; i<NumEnemies; ++i)
//		{
//			GameObject instance = Instantiate(EnemyPrefab, EnemyPrefab.transform.position, EnemyPrefab.transform.rotation) as GameObject;
//
//			instance.name = instance.name + i;
//			instance.transform.up = Random.insideUnitSphere;
//			instance.transform.parent = folder.transform;
//			
//			mEnemies.Add (instance.GetComponentInChildren<Enemy>());
//			mEnemies[mEnemies.Count-1].gameObject.SetActive(false);
//		}		
	}
	
	void Update () 
	{
	}
	
	
<<<<<<< Updated upstream
	public void SpawnEnemy()
	{
		foreach (Enemy enemy in mEnemies)
		{
			if (!enemy.gameObject.activeInHierarchy)
			{
				enemy.gameObject.SetActive(true);
				SphereTransform moveController = enemy.GetComponent<SphereTransform>();
				WayPoint wp = NavigationManager.instance.SelectRandomWaypoint();
				moveController.ImmediateSet( Quaternion.FromToRotation(Vector3.up, wp.transform.position.normalized) );
				moveController.Apply ();
				
				break;
			}
		}
	}
=======
>>>>>>> Stashed changes
}
